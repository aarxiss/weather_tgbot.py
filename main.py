import asyncio
import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

API_TOKEN = "..."
WEATHER_API_KEY = "..."

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

@dp.message(CommandStart())
async def start_handler(message: Message):
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –±–µ–∑ HTML, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–∫–∏ –∑ —Ç–µ–≥–∞–º–∏
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ /weather –º—ñ—Å—Ç–æ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.")

@dp.message(Command("help"))
async def help_handler(message: Message):
    text = (
        "/start ‚Äî –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º\n"
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/info ‚Äî —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞\n"
        "/exit ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É\n"
        "/weather <–º—ñ—Å—Ç–æ> ‚Äî –ø–æ–≥–æ–¥–∞ —É –≤–∫–∞–∑–∞–Ω–æ–º—É –º—ñ—Å—Ç—ñ"
    )
    await message.answer(text)

@dp.message(Command("info"))
async def info_handler(message: Message):
    await message.answer("–¶–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π Telegram-–±–æ—Ç –Ω–∞ aiogram v3, —è–∫–∏–π –ø–æ–∫–∞–∑—É—î –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ OpenWeather API.")

@dp.message(Command("exit"))
async def exit_handler(message: Message):
    await message.answer("–î—è–∫—É—é, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—è –±–æ—Ç–æ–º! –ë—É–≤–∞–π üëã")

@dp.message(Command("weather"))
async def weather_handler(message: Message):
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer("–í–∫–∞–∂–∏ –º—ñ—Å—Ç–æ –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:\n/weather Kyiv")
        return

    city = args[1]

    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=uk"

    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            if resp.status != 200:
                await message.answer("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞.")
                return
            data = await resp.json()

    weather_desc = data['weather'][0]['description'].capitalize()
    temp = data['main']['temp']
    feels_like = data['main']['feels_like']
    humidity = data['main']['humidity']
    wind_speed = data['wind']['speed']

    response = (
        f"–ü–æ–≥–æ–¥–∞ –≤ <b>{city.title()}</b>:\n"
        f"{weather_desc}\n"
        f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ {feels_like}¬∞C)\n"
        f"–í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\n"
        f"–®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É: {wind_speed} –º/—Å"
    )

    await message.answer(response)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
